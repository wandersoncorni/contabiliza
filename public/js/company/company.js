/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/company/company.js":
/*!*****************************************!*\
  !*** ./resources/js/company/company.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadNewCompaniesTable: () => (/* binding */ loadNewCompaniesTable),\n/* harmony export */   newCompaniesList: () => (/* binding */ newCompaniesList)\n/* harmony export */ });\n/* harmony import */ var _company_form_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company_form.js */ \"./resources/js/company/company_form.js\");\n/* harmony import */ var _partner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./partner.js */ \"./resources/js/company/partner.js\");\n/* harmony import */ var _plan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plan.js */ \"./resources/js/company/plan.js\");\n/* harmony import */ var _step_wizard_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./step-wizard.js */ \"./resources/js/company/step-wizard.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers.js */ \"./resources/js/helpers.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Scripts para pagina de empresas\r\n */\n\n\n\n\n\n\n\nlet newCompaniesList = [];\n$(document).ready(function () {\n  // Carrega as tabelas\n  loadCompaniesTable();\n  loadNewCompaniesTable();\n  (0,_company_form_js__WEBPACK_IMPORTED_MODULE_0__.init)();\n  (0,_partner_js__WEBPACK_IMPORTED_MODULE_1__.init)();\n  (0,_plan_js__WEBPACK_IMPORTED_MODULE_2__.init)();\n\n  //Inicializa os modulos e eventos\n  let live = null;\n  $('#modal-form-company').on('show.bs.modal', function () {\n    live = setInterval(function () {\n      fetch('api/v1/live');\n    }, 640000);\n    resetForms();\n  }).on('hide.bs.modal', function () {\n    clearInterval(live);\n  });\n  $(document).on('click', '#btn-next', function () {\n    _step_wizard_js__WEBPACK_IMPORTED_MODULE_3__.next();\n  });\n  $(document).on('click', '#btn-prev', function () {\n    _step_wizard_js__WEBPACK_IMPORTED_MODULE_3__.prev();\n  });\n  // Preenche o form para edição\n  $(document).on('click', '#tb-new-companies tbody tr td:last-child div button', function () {\n    if ($(this).data('action') == 'edit') {\n      $('#modal-form-company').modal('show');\n      const companyData = newCompaniesList.find(c => c.id == $(this).data('idCompany'));\n      Object.keys(companyData).forEach(campo => {\n        const field = $(`#form-company [name=\"${campo}\"]`);\n        if (field.is('select')) {\n          (async () => await setSelectValue(campo, companyData[campo]))();\n          return;\n        }\n        if (campo == 'capital_social') {\n          field.val((0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.currencyFormat)(companyData[campo]));\n          return;\n        }\n        field.val(companyData[campo]);\n        field.removeAttr('data-changed');\n      });\n      return;\n    }\n  });\n  $('#btn-save').click(function () {\n    const activeNav = $('#nav-tabFormCompany .tab-pane.active').attr('id');\n    if (activeNav == 'nav-company') {\n      (0,_company_form_js__WEBPACK_IMPORTED_MODULE_0__.saveCompany)();\n    }\n    if (activeNav == 'nav-partners') {\n      (0,_partner_js__WEBPACK_IMPORTED_MODULE_1__.savePartner)();\n      return;\n    }\n  });\n});\n// Carrega a lista de empresas do cliente\nfunction loadCompaniesTable() {\n  if ($('.dataTable').length) $('#tb-companies').DataTable().destroy();\n  //return new DataTable('#tb-companies', {\n  $('#tb-companies').DataTable({\n    ajax: function (data, callback) {\n      fetch('/api/v1/companies', {\n        method: 'GET',\n        credentials: 'include'\n      }).then(async response => {\n        if (!response.ok) {\n          callback({\n            data: []\n          });\n          return;\n        }\n        const data = await response.json();\n        return callback({\n          data: data\n        });\n      });\n    },\n    searching: false,\n    order: [],\n    columns: [{\n      data: 'cnpj'\n    }, {\n      data: 'nome'\n    }, {\n      data: () => {\n        return '<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modal-form-company\">Criar</button>';\n      }\n    }],\n    columnDefs: [{\n      targets: [1],\n      orderable: true\n    }, {\n      targets: [2],\n      orderable: false\n    }, {\n      targets: [0],\n      type: 'string',\n      orderable: false\n    }]\n  });\n}\n// Carrega a lista de solicitações de criação de empresas\nfunction loadNewCompaniesTable() {\n  $('#tb-new-companies').DataTable().destroy();\n  $('#tb-new-companies').DataTable({\n    ajax: function (data, callback) {\n      fetch('/api/v1/companies/requests', {\n        method: 'GET'\n      }).then(async response => {\n        if (!response.ok) {\n          callback({\n            data: []\n          });\n          return;\n        }\n        const data = await response.json();\n        newCompaniesList = data;\n        return callback({\n          data: data\n        });\n      });\n    },\n    columns: [{\n      data: 'nome_fantasia'\n    }, {\n      data: 'status_label'\n    }, {\n      data: 'situacao_label'\n    }, {\n      data: data => {\n        return $('<div />').append([$('<button />', {\n          type: 'button',\n          class: 'btn btn-xs btn-warning d-inline-flex align-items-center me-4',\n          'data-id-company': data.id,\n          'data-action': 'edit'\n        }).append($('<i/>', {\n          class: 'heroicon heroicon-pencil'\n        })), $('<button />', {\n          type: 'button',\n          class: 'btn btn-xs btn-danger d-inline-flex align-items-center',\n          'data-id-company': data.id,\n          'data-action': 'delete'\n        }).append($('<i/>', {\n          class: 'heroicon heroicon-trash'\n        }))]).prop('outerHTML');\n      }\n    }],\n    columnDefs: [{\n      targets: [0, 1],\n      orderable: true,\n      searchable: true\n    }, {\n      targets: [2],\n      orderable: false,\n      searchable: false\n    }]\n  });\n}\n//Insere os dados no select\nconst interals = [];\nasync function setSelectValue(select, value) {\n  return new Promise(resolve => {\n    const start = Date.now();\n    const interval = setInterval(() => {\n      if ($(`[name=\"${select}\"] option`).length) {\n        clearInterval(interval);\n        $(`[name=\"${select}\"]`).val(value).trigger('change').removeAttr('data-changed');\n        resolve(true);\n      }\n      if (Date.now() - start > 30000) {\n        clearInterval(interval);\n      }\n    }, 500);\n  });\n}\nfunction resetForms() {\n  $('.is-invalid').removeClass('is-invalid');\n  $('.invalid-feedback').remove();\n  $('.step-wizard-list li').removeClass('current-item').eq(0).addClass('current-item');\n  $('#nav-tabCompany .tab-pane').removeClass('active show').eq(0).addClass('active show');\n}\n\n//# sourceURL=webpack://access-control/./resources/js/company/company.js?");

/***/ }),

/***/ "./resources/js/company/company_form.js":
/*!**********************************************!*\
  !*** ./resources/js/company/company_form.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   saveCompany: () => (/* binding */ saveCompany)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./resources/js/helpers.js\");\n/* harmony import */ var _company_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./company.js */ \"./resources/js/company/company.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Scripts para o formulario de solicitação de nova empresa\r\n */\n\n\n\n\nfunction init() {\n  $(document).on('show.bs.modal', '#modal-form-company', function () {\n    $('#form-company')[0].reset();\n    $('#form-company').find('.is-invalid').removeClass('is-invalid');\n    $('#form-company #id').val('');\n    $('#form-company [data-changed=\"true\"]').removeAttr('data-changed');\n    listarCNAEs();\n    listarRegimesTributarios();\n    listarFaixasFaturamento();\n    listarNaturezasJuridicas();\n    listarAreasAtividade();\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.listStates)('[name=\"estado\"]');\n  });\n  // Formata o campo de capital social\n  $('#capital_social').on('input', function () {\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.formatCurrencyValue)(this);\n  });\n  $(document).on('input', '#cep-company', function () {\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.cepFormat)(this);\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getAddress)(this);\n  });\n  //Seleciona as faixas de faturamento de acordo com o regime tributário\n  $('#regime_tributario').on('change', function () {\n    const val = $(this).val();\n    if (!val) {\n      $('#faixa_faturamento').prop('disabled', true);\n      return;\n    }\n    $('#faixa_faturamento option').addClass('hidden').each(function () {\n      if ($(this).attr('data-regime-tributario') == val) {\n        $(this).removeClass('hidden');\n      }\n    });\n    $('#faixa_faturamento').prop('disabled', false);\n  });\n  $('#form-company').on('input', 'input', function () {\n    if ($('#form-company #id').val() != '') {\n      $(this).attr('data-changed', 'true');\n    }\n  });\n  $('#form-company').on('change', 'select', function () {\n    if ($('#form-company #id').val() != '') {\n      $(this).attr('data-changed', 'true');\n    }\n  });\n}\n/**\r\n * Lista as CNAEs\r\n */\nasync function listarCNAEs() {\n  if ($('#cnae option').length > 0) return;\n  const response = await fetch('/api/v1/cnaes');\n  const lista = await response.json();\n  $('#cnae').prop({\n    disabled: true\n  }).addClass('skeleton');\n  $('#cnae').html('<option value=\"\">Selecione um CNAE</option>');\n  lista.forEach(item => {\n    $('#cnae').append($('<option />', {\n      value: item.id,\n      text: item.descricao\n    }));\n  });\n  $('#cnae').prop({\n    disabled: false\n  }).removeClass('skeleton');\n}\n/**\r\n * Lista os regimes tributários\r\n */\nasync function listarRegimesTributarios() {\n  if ($('#regime_tributario option').length > 0) return;\n  const response = await fetch('/api/v1/regimes-tributarios');\n  const lista = await response.json();\n  $('#regime_tributario').prop({\n    disabled: true\n  }).addClass('skeleton');\n  $('#regime_tributario').html('<option value=\"\">Selecione um regime tributário</option>');\n  lista.forEach(item => {\n    $('#regime_tributario').append($('<option />', {\n      value: item.id,\n      text: item.descricao\n    }));\n  });\n  $('#regime_tributario').prop({\n    disabled: false\n  }).removeClass('skeleton');\n}\n/**\r\n * Lista as faixas de faturamento\r\n */\nasync function listarFaixasFaturamento() {\n  if ($('#faixa_faturamento option').length > 0) return;\n  const select = $('#faixa_faturamento');\n  select.prop({\n    disabled: true\n  }).addClass('skeleton');\n  const response = await fetch('/api/v1/faixas-faturamento');\n  const data = await response.json();\n  select.html('<option value=\"\">Selecione uma faixa de faturamento</option>');\n  data.forEach((faixa, id) => {\n    select.append($('<option />', {\n      class: 'hidden',\n      value: faixa.id,\n      text: faixa.descricao,\n      'data-regime-tributario': faixa.regime_tributario_id\n    }));\n  });\n  select.removeClass('skeleton');\n}\n/**\r\n * Lista as naturezas jurídicas\r\n */\nasync function listarNaturezasJuridicas() {\n  if ($('#natureza_juridica option').length > 0) return;\n  fetch('/api/v1/naturezas-juridicas').then(async response => {\n    if (!response.ok) {\n      return;\n    }\n    const data = await response.json();\n    const select = $('#natureza_juridica');\n    select.empty();\n    select.append($('<option />', {\n      value: '',\n      text: 'Selecione a natureza jurídica'\n    }));\n    data.forEach(natjur => {\n      select.append($('<option />', {\n        value: natjur.id,\n        text: natjur.descricao\n      }));\n    });\n  });\n}\n/**\r\n * \r\n * @returns Lista as areas ou ramos de atividade\r\n */\nasync function listarAreasAtividade() {\n  if ($('#area_atividade option').length > 0) return;\n  $('#area_atividade').prop({\n    disabled: true\n  }).addClass('skeleton');\n  try {\n    const response = await fetch('/api/v1/areas-atividade');\n    const lista = await response.json();\n    const select = $('#area_atividade');\n    select.empty();\n    select.append($('<option />', {\n      value: '',\n      text: 'Selecione uma area de atividade'\n    }));\n    lista.forEach(item => {\n      select.append($('<option />', {\n        value: item.id,\n        text: item.descricao\n      }));\n    });\n    $('#area_atividade').prop({\n      disabled: false\n    }).removeClass('skeleton');\n  } catch (error) {\n    console.error(error);\n  }\n}\n//Salva o formulário de empresa\nfunction saveCompany() {\n  $('#form-company .alert').remove();\n  const form = $('#form-company');\n  if ($('#form-company .is-invalid').length) {\n    return;\n  }\n\n  //Envia o formulario completo se o ID for vazio, indicando que é um novo registro\n  let formData = null;\n  let config = {\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'accept': 'application/json'\n    }\n  };\n  if ($('#form-company #id').val() == '') {\n    formData = new FormData($('#form-company')[0]);\n    config.body = formData;\n  }\n  // Se o ID já existir, atualiza o registro\n  else if ($('#form-company [data-changed=\"true\"]').length) {\n    formData = new FormData();\n    $('#form-company [data-changed=\"true\"]').each(function () {\n      formData.append($(this).attr('name'), $(this).val());\n    });\n    formData.append('id', $('#form-company #id').val());\n    formData.append('_method', 'PUT');\n    config.body = formData;\n  } else {\n    return;\n  }\n  fetch('/api/v1/company', config).then(async response => {\n    const data = await response.json();\n    if (response.ok) {\n      $('#form-company [data-changed=\"true\"]').removeAttr('data-changed');\n      _company_js__WEBPACK_IMPORTED_MODULE_1__.newCompaniesList.push(data);\n      (0,_company_js__WEBPACK_IMPORTED_MODULE_1__.loadNewCompaniesTable)();\n      $('#form-company [name=\"id\"]').val(data.id);\n      $('#form-company div:first').prepend($('<div />', {\n        class: 'alert alert-success d-flex align-items-center'\n      }).append([$('<i />', {\n        class: 'heroicon heroicon-check-circle me-2'\n      }), $('<span />', {\n        text: 'Empresa salva com sucesso!'\n      })]));\n      return;\n    }\n    if (data.error) {\n      $('#form-company div:first').prepend($('<div />', {\n        class: 'alert alert-danger d-flex align-items-center'\n      }).append($('<i />', {\n        class: 'heroicon heroicon-x-circle me-2'\n      }), data.error));\n      return;\n    }\n    if (typeof data.errors === 'object') {\n      Object.keys(data.errors).forEach(field => {\n        if (field == 'id') return;\n        const el = $(`#form-company [name=\"${field}\"]`);\n        if (el.length) {\n          (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.addInvalidFeedback)(el.get(0), data.errors[field][0]);\n        } else {\n          $('#form-company').prepend($('<div />', {\n            class: 'alert alert-danger',\n            text: 'Ocorreu um erro ao salvar a empresa'\n          }));\n        }\n      });\n      return;\n    }\n    $('#form-company div:first').prepend($('<div />', {\n      class: 'alert alert-danger d-flex align-items-center'\n    }).append($('<i />', {\n      class: 'heroicon heroicon-x-circle me-2'\n    }), 'Ocorreu um erro ao salvar a empresa'));\n  });\n}\n\n//# sourceURL=webpack://access-control/./resources/js/company/company_form.js?");

/***/ }),

/***/ "./resources/js/company/partner.js":
/*!*****************************************!*\
  !*** ./resources/js/company/partner.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   listPartners: () => (/* binding */ listPartners),\n/* harmony export */   savePartner: () => (/* binding */ savePartner)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./resources/js/helpers.js\");\n/* harmony import */ var _partner_form_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./partner_form.js */ \"./resources/js/company/partner_form.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Scripts para a tab de socios\r\n * Dependencies: helpers.js e partner_form.js\r\n */\n\n\n\n\nfunction init() {\n  // Cria o formulário de sócio\n  (0,_partner_form_js__WEBPACK_IMPORTED_MODULE_1__.createPartnerForm)();\n  (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.formatPercentage)('.percentage');\n  $(document).on('click', '#add-partner', function () {\n    (0,_partner_form_js__WEBPACK_IMPORTED_MODULE_1__.createPartnerForm)();\n  });\n  $(document).on('input', '.participacao', function () {\n    progressUpdate();\n  });\n  $(document).on('click', '.remove-partner', function () {\n    if ($('.accordion').length == 1) {\n      Swal.fire({\n        title: 'Atenção',\n        text: 'O cadastro de empresas deve ter pelo menos um sốcio.',\n        icon: 'warning'\n      });\n      return;\n    }\n    $(this).closest('.accordion').remove();\n    progressUpdate();\n  });\n  $(document).on('click', '#btn-next', function () {\n    if ($('#nav-tabFormCompany .tab-pane.active').next('.tab-pane').prop('id') == 'nav-partners' && $('#form-company [name=\"id\"]').val()) {\n      listPartners();\n    }\n  });\n}\n/**\r\n * @function progressUpdate\r\n * @description Updates the progress bar based on the input values of the specified field.\r\n */\nfunction progressUpdate() {\n  let total = 0;\n  $('.participacao').each(function () {\n    let textVal = $(this).val() ?? 0;\n    let val = textVal.replace(/[^0-9.]/g, '');\n    total += parseFloat(val);\n    if (total > 100) total = 100;\n  });\n  $('.progress-bar').css('width', total + '%').attr({\n    'aria-valuenow': total\n  }).removeClass(['bg-info', 'bg-success']).addClass(`bg-${total == 100 ? 'success' : 'info'}`);\n  $('.progress-info span').text(total + '%');\n}\n/**\r\n * Carrega a lista de sócios da empresa\r\n */\nfunction listPartners() {\n  if ($('.accordion').length) {\n    const accordion = $('.accordion:first .accordion-button');\n    accordion.click();\n    $(`.accordion:first .accordion-body input[type=\"text\"], \n            .accordion:first .accordion-body select, \n            .accordion:first .accordion-body [type=\"email\"]`).each(function () {\n      $(this).addClass('skeleton').prop('disabled', true);\n    });\n    fetch(`/api/v1/partners/${$('#form-company [name=\"id\"]').val()}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async response => {\n      const data = await response.json();\n      $('.skeleton').removeClass('skeleton').prop('disabled', false);\n      $('#add-partner').prop('disabled', false);\n      if (!response.ok || !data || data.length == 0) {\n        return;\n      }\n      data[0].socios.forEach((socio, index) => {\n        const formId = `#form-partner-${index + 1}`;\n        if ($(formId).length == 0) (0,_partner_form_js__WEBPACK_IMPORTED_MODULE_1__.createPartnerForm)();\n        $(`${formId} .accordion .accordion-header .accordion-button label`).text(socio.nome);\n        const form = $(formId);\n        fillForm(form, socio);\n      });\n      progressUpdate();\n    }).catch(error => {\n      console.error('Erro ao carregar sócios:', error);\n    });\n  }\n}\n/**\r\n * Insere os dados no formulário\r\n * @param {*} data \r\n * @param {*} form\r\n */\nfunction fillForm(form, data) {\n  Object.keys(data).forEach(key => {\n    if (['pro_labore', 'resp_rf'].includes(key)) {\n      form.find(`[name=\"${key}\"][value=\"${data[key]}\"]`).prop('checked', true);\n      return;\n    }\n    form.find(`[name=\"${key}\"]`).val(data[key]);\n    if (key == 'participacao') form.find(`[name=\"${key}\"]`).focus();\n  });\n}\nfunction savePartner() {\n  let participacao = 0;\n  //Configura o formulário\n  $('[id^=\"form-partner\"]').each(function () {\n    const formId = $(this).attr('id');\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.removeInvalidFeedback)(`#${formId}`);\n    $(`#${formId} :required`).each(function () {\n      if ($(this).val() == '') {\n        (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.addInvalidFeedback)(this);\n      }\n    });\n    if ($(`#${formId} [name=\"estado_civil\"]`).val() == 2 && $(`#${formId} [name=\"regime_bens\"]`).val() == '') {\n      (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.addInvalidFeedback)($(`#${formId} [name=\"regime_bens\"]`), 'Regime de bens é obrigatório para casados.');\n    }\n    //Soma as participações\n    participacao += parseFloat($(`#${formId} [name=\"participacao\"]`).val().replace(/[^0-9.]/g, '')) ?? 0;\n    if ($(`#${formId} .is-invalid`).length > 0 && $(`#${formId} .accordion-button`).hasClass('collapsed')) {\n      $(`#${formId}  .accordion-button`).click();\n    }\n  });\n  if ($(`[id^=\"form-partner\"] .is-invalid`).length > 0) {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Atenção',\n      text: 'Existe um ou mais campos inválidos.'\n    });\n    return;\n  }\n  // Verifica se a soma das participações é igual a 100%\n  if (participacao != 100) {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Atenção',\n      text: 'A soma das participações deve ser igual a 100%'\n    });\n    return;\n  }\n  if ($('#form-company [name=\"id\"]').val() == '') {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Atenção',\n      text: 'Os dados da empresa devem ser salvos antes de salvar os sócios.'\n    });\n    return;\n  }\n  $('[id^=\"form-partner\"]').each(function () {\n    const formId = $(this).attr('id');\n    let formData = null;\n    $(`#${formId} .alert`).remove();\n    // Envia os dados via POST\n    if ($(`#${formId} [name=\"id\"]`).val() == '') {\n      formData = new FormData($(`#${formId}`)[0]);\n      $(`#${formId} .alert`).remove();\n      formData.append('company_id', $('#form-company [name=\"id\"]').val());\n    }\n    // Envia os dados via PUT\n    else if ($(`#${formId} [data-changed=\"true\"]`).length) {\n      formData = new FormData();\n      formData.append('id', $(`#${formId} [name=\"id\"]`).val());\n      formData.append('_method', 'PUT');\n      $(`#${formId} [data-changed=\"true\"]`).each(function () {\n        formData.append($(this).attr('name'), $(this).val());\n      });\n    }\n    if (formData == null) {\n      return;\n    }\n    fetch('/api/v1/partner', {\n      method: 'POST',\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n        'Accept': 'application/json'\n      },\n      body: formData\n    }).then(async response => {\n      const data = await response.json();\n      if (response.ok) {\n        $(`#${formId} .label-name`).text(data.nome);\n        $(`#${formId} .accordion-body div:first`).prepend($('<div />', {\n          class: 'alert alert-success d-flex',\n          role: 'alert'\n        }).append($('<i />', {\n          class: 'heroicon heroicon-check-circle me-2'\n        }), 'Sócio salvo com sucesso!'));\n        fillForm($(`#${formId}`), data);\n        $(`#${formId} [data-changed=\"true\"]`).removeAttr('data-changed');\n        return;\n      }\n      if (data.errors) {\n        for (const [key, value] of Object.entries(data.errors)) {\n          (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.addInvalidFeedback)($(`#${formId} [name=\"${key}\"]`), value);\n        }\n      } else if (data.error) {\n        if ($(`#${formId} .accordion-button`).hasClass('collapsed')) {\n          $(`#${formId} .accordion-button`).click();\n        }\n        $(`#${formId} .accordion-body div:first`).prepend($('<div />', {\n          class: 'alert alert-danger d-flex',\n          role: 'alert'\n        }).append($('<i />', {\n          class: 'heroicon heroicon-exclamation-triangle mt-1 me-2'\n        }), data.error));\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  });\n}\n\n//# sourceURL=webpack://access-control/./resources/js/company/partner.js?");

/***/ }),

/***/ "./resources/js/company/partner_form.js":
/*!**********************************************!*\
  !*** ./resources/js/company/partner_form.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPartnerForm: () => (/* binding */ createPartnerForm)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./resources/js/helpers.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Script para o formulário de socio\r\n */\n\n\n\nlet partnerCount = 0;\nfunction createPartnerForm() {\n  partnerCount++;\n  const selector = `partner-${partnerCount}`;\n  const accordionId = `accordionForm${partnerCount}`;\n  const collapseId = `collapseForm${partnerCount}`;\n  const headerId = `headerForm${partnerCount}`;\n  const formId = `form-partner-${partnerCount}`;\n  const formHtml = `\n    <form id=\"${formId}\">\n        <div class=\"accordion mb-3\" id=\"${accordionId}\">\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"${headerId}\">\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${collapseId}\" aria-expanded=\"false\" aria-controls=\"${collapseId}\">\n                    <label class=\"form-label m-0 label-name\" style=\"font-size: 18px;\">Sócio</label>\n                </button>\n                </h2>\n                <div id=\"${collapseId}\" class=\"accordion-collapse collapse\" aria-labelledby=\"${headerId}\" data-bs-parent=\"#${accordionId}\">\n                    <div class=\"accordion-body bg-white\">\n                        <div class=\"col-lg-12 mb-3 text-end\">\n                            <button type=\"button\" class=\"btn btn-danger d-inline-flex align-items-center me-2 remove-partner\">\n                                <i class=\"heroicon heroicon-trash\"></i> Excluir\n                            </button>\n                        </div>\n                        <!-- Dados pessoais -->\n                        <div class=\"col-lg-12 col-md-12 bg-gray-100 rounded-lg shadow p-4 mb-3\">\n                            <h5 class=\"mb-3\">Dados pessoais</h5>\n                            <div class=\"row mb-3\">\n                                <div class=\"col-lg-6 col-md-5\">\n                                    <label class=\"form-label\">Nome</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"nome\" required />\n                                    <input type=\"hidden\" name=\"id\" id=\"id\" value=\"\" />\n                                </div>\n                                <div class=\"col-lg-3 col-md-3\">\n                                    <label class=\"form-label\">CPF</label>\n                                    <input type=\"text\" class=\"form-control cpf\" name=\"cpf\" required />\n                                </div>\n                                <div class=\"col-lg-3 col-md-3\">\n                                    <label class=\"form-label\">Telefone</label>\n                                    <input type=\"text\" class=\"form-control phone\" name=\"telefone\" required />\n                                </div>\n                            </div>\n                            <div class=\"row mb-3\">\n                                <div class=\"col-6\">\n                                    <label class=\"form-label\">E-mail</label>\n                                    <input type=\"email\" class=\"form-control\" name=\"email\" required />\n                                </div>\n                                <div class=\"col-6\">\n                                    <label class=\"form-label\">Profissão</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"profissao\" required />\n                                </div>\n                            </div>\n                            <div class=\"row mb-3\">\n                                <div class=\"col-6\">\n                                    <label class=\"form-label\">Estado Civil</label>\n                                    <select class=\"form-select estado-civil\" name=\"estado_civil\" required ></select>\n                                </div>\n                                <div class=\"col-6\">\n                                <label class=\"form-label\">Regime de Bens</label>\n                                    <select class=\"form-select\" name=\"regime_bens\" id=\"regimes_bens\" disabled >\n                                </select>\n                                </div>\n                            </div>\n                        </div>\n\n                        <!-- Endereço -->\n                        <div class=\"col-lg-12 col-md-12 bg-gray-100 rounded-lg shadow p-4 mb-3\">\n                            <h5 class=\"mb-3\">Endereço</h5>\n                            <div class=\"row mb-3\">\n                                <div class=\"col-lg-2 mb-3\">\n                                    <label class=\"form-label\">CEP</label>\n                                    <input type=\"text\" name=\"cep\" data-address=\"${selector}\" class=\"form-control cep-partner\" required />\n                                </div>\n                                <div class=\"col-lg-4 mb-3\">\n                                    <label class=\"form-label\">Logradouro</label>\n                                    <input type=\"text\" name=\"logradouro\" data-address=\"${selector}\" class=\"form-control\" required />\n                                </div>\n                                <div class=\"col-lg-2 mb-3\">\n                                    <label class=\"form-label\">Número</label>\n                                    <input type=\"text\" name=\"numero\" data-address=\"${selector}\" class=\"form-control\" />\n                                </div>\n                                <div class=\"col-lg-4 mb-3\">\n                                    <label class=\"form-label\">Complemento</label>\n                                    <input type=\"text\" name=\"complemento\" data-address=\"${selector}\" class=\"form-control\" />\n                                </div>\n                                <div class=\"col-lg-4 mb-3\">\n                                    <label class=\"form-label\">Bairro</label>\n                                    <input type=\"text\" name=\"bairro\" data-address=\"${selector}\" class=\"form-control\" required />\n                                </div>\n                                <div class=\"col-lg-4 mb-3\">\n                                    <label class=\"form-label\">Município</label>\n                                    <input type=\"text\" name=\"localidade\" data-address=\"${selector}\" class=\"form-control\" required />\n                                </div>\n                                <div class=\"col-lg-4 mb-3\">\n                                    <label class=\"form-label\">Estado</label>\n                                    <select name=\"estado\" data-address=\"${selector}\" class=\"form-select uf\" required></select>\n                                </div>\n                            </div>\n                        </div>\n\n                        <!-- Participação -->\n                        <div class=\"col-lg-12 col-md-12 bg-gray-100 rounded-lg shadow p-4 mb-3\">\n                            <h5 class=\"mb-3\">Participação societária</h5>\n                            <div class=\"row\">\n                                <div class=\"col-12 d-flex align-items-center mb-3\">\n                                    <label class=\"form-label me-3\">Prolabore:</label>\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"pro_labore\" value=\"0\" id=\"pro_labore_${partnerCount}0\" checked />\n                                        <label class=\"form-check-label\" for=\"pro_labore_${partnerCount}0\">não</label>\n                                    </div>\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"pro_labore\" value=\"1\" id=\"pro_labore_${partnerCount}1\" />\n                                        <label class=\"form-check-label\" for=\"pro_labore_${partnerCount}1\">sim</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-12 d-flex align-items-center mb-3\">\n                                    <label class=\"form-label me-3\">Participação (%)</label>\n                                    <input type=\"text\" class=\"form-control percentage participacao me-2\" style=\"width: 70px;\" name=\"participacao\" value=\"0%\" placeholder=\"0%\" required />\n                                </div>\n                                <div class=\"col-12 d-flex align-items-center\">\n                                    <label class=\"form-label me-3\">Responsável perante a Receita Federal:</label>\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"resp_rf\" value=\"0\" id=\"resp_rf_${partnerCount}0\" checked />\n                                        <label class=\"form-check-label\" for=\"resp_rf_${partnerCount}0\">não</label>\n                                    </div>\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"resp_rf\" value=\"1\" id=\"resp_rf_${partnerCount}1\" />\n                                        <label class=\"form-check-label\" for=\"resp_rf_${partnerCount}1\">sim</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>`;\n  $('#partners-container').append(formHtml);\n  listarRegimeBens(formId);\n  listarEstadosCivis(formId);\n  _helpers_js__WEBPACK_IMPORTED_MODULE_0__.listStates(`#${formId} [name=\"estado\"]`);\n  $(document).on('change', `#${formId} [name=\"estado_civil\"]`, function () {\n    if (this.value == 2) {\n      $(`#${formId} [name=\"regime_bens\"]`).prop('disabled', false);\n      return;\n    }\n    $(`#${formId} [name=\"regime_bens\"]`).prop('disabled', true);\n  });\n  setupFormPartner(formId);\n}\n\n/**\r\n * @function setupFormPartner\r\n * @description Sets up the form for partner input fields, including formatting and event listeners.\r\n */\nfunction setupFormPartner(formId) {\n  $(`#${formId} [name=\"cpf\"]`).on('input', function () {\n    _helpers_js__WEBPACK_IMPORTED_MODULE_0__.cpfFormat(this);\n  });\n  $(`#${formId} [name=\"telefone\"]`).on('input', function () {\n    _helpers_js__WEBPACK_IMPORTED_MODULE_0__.foneFormat(this);\n  });\n  $(`#${formId} [name=\"cep\"]`).on('input', function () {\n    _helpers_js__WEBPACK_IMPORTED_MODULE_0__.cepFormat(this);\n    _helpers_js__WEBPACK_IMPORTED_MODULE_0__.getAddress(this);\n    if ($(`#${formId} [name=\"id\"]`).val()) {\n      ['logradouro', 'bairro', 'localidade', 'estado'].forEach(field => {\n        $(`#${formId} [name=\"${field}\"]`).attr('data-changed', true);\n      });\n    }\n  });\n  //Detecta alterações e marca o campo como alterado\n  $(`#${formId} input, #${formId} email, #${formId} select, #${formId} :checkbox`).on('change', function () {\n    if ($(`#${formId} [name=\"id\"]`).val()) {\n      $(this).attr('data-changed', 'true');\n    }\n  });\n}\nlet listaRegimesBens = [];\n/**\r\n * @function listarRegimeBens\r\n * @description Fetches the list of property regimes from the API and populates the select element.\r\n * @param {number} pid - The ID of the partner being added.\r\n */\nasync function listarRegimeBens(formId) {\n  const field = $(`#${formId} [name=\"regime_bens\"]`);\n  if (listaRegimesBens.length == 0) {\n    const response = await fetch('/api/v1/regime-bens', {\n      method: 'GET'\n    });\n    const regimesBens = await response.json();\n    listaRegimesBens = regimesBens;\n  }\n  field.html(`<option value=\"\">Selecione uma opção</option>`);\n  listaRegimesBens.forEach(regimeBens => {\n    field.append(`<option value=\"${regimeBens.id}\">${regimeBens.nome}</option>`);\n  });\n}\nlet listaEstadosCivis = [];\nasync function listarEstadosCivis(formId) {\n  const field = $(`#${formId} [name=\"estado_civil\"]`);\n  if (listaEstadosCivis.length == 0) {\n    const response = await fetch('/api/v1/auxiliares/listar-estado-civil');\n    listaEstadosCivis = await response.json();\n  }\n  field.html(`<option value=\"\">Selecione uma opção</option>`);\n  listaEstadosCivis.forEach(estadoCivil => {\n    field.append(`<option value=\"${estadoCivil.id}\">${estadoCivil.descricao}</option>`);\n  });\n}\n\n//# sourceURL=webpack://access-control/./resources/js/company/partner_form.js?");

/***/ }),

/***/ "./resources/js/company/plan.js":
/*!**************************************!*\
  !*** ./resources/js/company/plan.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./resources/js/helpers.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Script para gerenciar o plano serviço.\r\n */\n\n\n\nlet plansData = null;\nfunction init() {\n  // carrega a lista de opções de planos de serviço    \n  $('#modal-form-company .modal-footer #btn-next').on('click', function () {\n    const activeTabId = $('#nav-tabFormCompany .tab-pane.active').next('.tab-pane').prop('id');\n    if (activeTabId == 'nav-plano') {\n      if (!plansData) {\n        loadPlans();\n      } else if ($('#plano_id').val()) {\n        buildPlan($('#plano_id').val());\n      }\n      $('#btn-save').click(function () {\n        savePlan();\n      });\n    }\n    ;\n  });\n  //Monta o plano de serviço\n  $(document).on('change', '#plano_id', function () {\n    buildPlan($(this).val());\n  });\n}\n// Carregar os dados dos planos\nasync function loadPlans() {\n  try {\n    const areaAtividadeId = $('[name=\"area_atividade_id\"]').val();\n    const response = await fetch(`/api/v1/service-plans/${areaAtividadeId}`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao carregar os planos de serviço');\n    }\n    const data = await response.json();\n    const options = ['<option value=\"\">Selecione um plano</option>'];\n    data.forEach(plan => {\n      plan.valor_plano_servico.forEach(val => {\n        options.push(`<option value=\"${plan.id}.${val.id}\">${plan.nome} - ${val.rotulo}</option>`);\n      });\n    });\n    plansData = data;\n    $('#plano_id').removeClass('skeleton').html(options.join(''));\n  } catch (error) {\n    console.error('Erro ao carregar os planos de serviço:', error);\n  }\n}\n//Semaforo para carregar as faixas de faturamento\nlet waitForLoadAdicionalFaixasFaturamento;\nconst loadAdicionalFaixasFaturamentoResolved = new Promise(resolve => {\n  waitForLoadAdicionalFaixasFaturamento = resolve;\n});\nasync function loadAdicionalFaixasFaturamento() {\n  try {\n    const pid = $('#plano_id').val().split('.')[0];\n    const ffid = $('[name=\"faixa_faturamento_id\"]').val();\n    const response = await fetch(`/api/v1/faixas-faturamento/${pid}/${ffid}`);\n    const data = await response.json();\n    $('#table-plan tbody tr:nth-child(4) td:nth-child(2)').text(data.faixa_faturamento.descricao + '**');\n    $('#table-plan tbody tr:nth-child(4) td:nth-child(3)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(data.valor));\n    $('#table-plan tbody tr:nth-child(4) td:nth-child(5)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(data.valor));\n    const regime = $('#regime_tributario option:checked').text();\n    const text = ` Obs: <ul class=\"list-unstyled\">\n                    <li>*  Adicional cobrado conforme a faixa de faturamento.</li>\n                    <li>** Valor para optantes do regime de tributação \"<b>${data.faixa_faturamento.regime_tributario}</b>\"</li>\n                    </ul>`;\n    $('.obs').html(text);\n    waitForLoadAdicionalFaixasFaturamento();\n  } catch (error) {\n    console.error('Erro ao carregar os planos de serviço:', error);\n  }\n}\n/**\r\n * Soma os valores da tabela\r\n * Deve aguardar o carregamento das faixas de faturamento\r\n */\nasync function sum() {\n  await loadAdicionalFaixasFaturamentoResolved;\n  let totalBill = 0;\n  $('#table-plan tbody tr td:nth-child(5)').each(function () {\n    totalBill += (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.parseCurrencyToFloat)($(this).text()) || 0;\n  });\n  $('#table-plan tfoot tr:nth-child(1) td:nth-child(3)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(totalBill));\n  const parentSkeleton = $('div.skeleton').parent();\n  parentSkeleton.text('-');\n}\nfunction buildPlan(pval) {\n  $('#table-plan tbody tr td.data').html('<div class=\"skeleton\"></div>');\n  if (pval == '') return;\n  /*\r\n   * pid - id do plano.\r\n   * vid - id do valor do plano.\r\n   */\n  const [pid, vid] = pval.split('.');\n  const planData = plansData.find(planoServico => planoServico.id == pid); //Extrai o plano de serviço\n  const valData = planData.valor_plano_servico.find(planoServicoValor => planoServicoValor.id == vid); //Extrai o valor do plano de serviço\n\n  $('#table-plan tbody tr:nth-child(1) td:nth-child(3)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(valData.valor));\n  $('#table-plan tbody tr:nth-child(1) td:nth-child(5)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(valData.valor));\n  $('#table-plan tbody tr:nth-child(2) td:nth-child(4)').text($('#partners-container [name=\"pro_labore\"][value=\"1\"]:checked').length);\n  $('#table-plan tbody tr:nth-child(3) td:nth-child(4)').text($('#total_funcionarios').val());\n  planData.plano.forEach(item => {\n    if (item.servico.valor != null) {\n      const condition = item.servico.valor.condicoes;\n      const serviceVal = item.servico.valor.valor;\n      if (item.servico.nome == 'Pró-labore dos sócios') {\n        const totalPartner = $('#partners-container .accordion [name=\"pro_labore\"][value=\"1\"]:checked').length;\n        let totalProLabore = 0;\n        if (condition[0] == 'gt' && totalPartner > condition[1]) {\n          totalProLabore = parseInt((totalPartner - condition[1]) * serviceVal);\n        }\n        $('#table-plan tbody tr:nth-child(2) td:nth-child(2)').text(item.observacao);\n        $('#table-plan tbody tr:nth-child(2) td:nth-child(3)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(serviceVal));\n        $('#table-plan tbody tr:nth-child(2) td:nth-child(4)').text(totalPartner);\n        $('#table-plan tbody tr:nth-child(2) td:nth-child(5)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(totalProLabore));\n      } else if (item.servico.nome == 'Folha de pagamento') {\n        const totalFunc = $('#total_funcionarios').val();\n        let totalFolha = 0;\n        if (condition[0] == 'gt' && totalFunc > condition[1]) {\n          totalFolha = parseInt((totalFunc - condition[1]) * serviceVal);\n        }\n        $('#table-plan tbody tr:nth-child(3) td:nth-child(2)').text(item.observacao);\n        $('#table-plan tbody tr:nth-child(3) td:nth-child(3)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(serviceVal));\n        $('#table-plan tbody tr:nth-child(3) td:nth-child(4)').text(totalFunc);\n        $('#table-plan tbody tr:nth-child(3) td:nth-child(5)').text((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.currencyFormat)(totalFolha));\n      } else if (item.servico.nome == 'Faixa de faturamento') {\n        loadAdicionalFaixasFaturamento();\n      }\n    }\n  });\n  //Soma os valores da tabela\n  sum();\n}\nfunction savePlan() {\n  (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.removeInvalidFeedback)('#form-plan');\n  const id = $('#form-plan [name=\"id\"]').val(); //Id do plano salvo\n  const pid = $('#form-plan [name=\"plano_id\"]').val(); //Id do plano de serviço + id do valor\n  const eid = $('#form-company [name=\"id\"]').val(); //Id da empresa\n\n  if (pid == '') {\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.addInvalidFeedback)($('#form-plan [name=\"plano_id\"]'));\n    return;\n  }\n  if (eid == '') {\n    Swal.fire({\n      icon: 'error',\n      title: 'Erro ao salvar o plano de serviço',\n      text: 'Recarregue os dados da empresa novamente.'\n    });\n    return;\n  }\n  const formData = new FormData();\n  formData.append('plano_id', pid);\n  formData.append('empresa_id', eid);\n  formData.append('id', id);\n  if (id != '') formData.append('_method', 'PUT');\n  const request = new Request('/api/v1/company/billing', {\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'Accept': 'application/json'\n    },\n    body: formData\n  });\n  const response = fetch(request);\n  response.then(async response => {\n    const data = await response.json();\n    if (data.ok) {\n      $('#form-plan div:first').append($('<div />', {\n        class: 'alert alert-success'\n      }).append($('<i />', {\n        class: 'heroicon heroicon-check-circle me-2'\n      }), 'Plano de serviço salvo com sucesso.'));\n      return;\n    }\n  });\n}\nfunction fillTablePlan() {\n  $('#table-plan tbody tr td.data').html('<div class=\"skeleton\"></div>');\n  $('#table-plan tbody tr td.data').html('<div class=\"skeleton\"></div>');\n  $('#table-plan tbody tr td.data').html('<div class=\"skeleton\"></div>');\n  $('#table-plan tbody tr td.data').html('<div class=\"skeleton\"></div>');\n  $('#table-plan tbody tr td.data').html('<div class=\"skeleton\"></div>');\n}\n\n//# sourceURL=webpack://access-control/./resources/js/company/plan.js?");

/***/ }),

/***/ "./resources/js/company/step-wizard.js":
/*!*********************************************!*\
  !*** ./resources/js/company/step-wizard.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   next: () => (/* binding */ next),\n/* harmony export */   prev: () => (/* binding */ prev)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./resources/js/helpers.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Scripts para o wizard de passos\r\n * @author Firstname Lastname <wandersoncorni@gmail.com>\r\n */\n\n\n\nfunction next() {\n  // Valida o formulario\n\n  if (!validateForm()) {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Atenção',\n      text: 'Existe um ou mais campos inválidos.'\n    });\n    return;\n  }\n  //Valida se a empresa foi carregada após ser salva\n  if ($('#form-company [name=\"id\"]').val() == '') {\n    Swal.fire({\n      title: 'Erro',\n      text: 'Ocorreu um erro ao tentar carregar os dados da empresa. Retorne a lista e selecione a empresa.',\n      icon: 'error'\n    });\n    return;\n  }\n  const nextStep = $('.step-wizard-item.current-item').index() + 2;\n  if (nextStep > 4) return;\n  $('#btn-prev').prop({\n    disabled: false\n  });\n  if (nextStep == 4) {\n    $('#btn-next').prop({\n      disabled: true\n    });\n  }\n  move(nextStep);\n}\nfunction prev() {\n  const currentStep = $('.step-wizard-item.current-item').index();\n  $('#btn-next').prop({\n    disabled: false\n  });\n  const prevStep = $('.step-wizard-item.current-item').index();\n  if (prevStep <= 0) return;\n  $('#btn-prev').prop({\n    disabled: false\n  });\n  if (prevStep == 1) {\n    $('#btn-prev').prop({\n      disabled: true\n    });\n  }\n  move(prevStep);\n}\nfunction move(step) {\n  $('.step-wizard-item').removeClass('current-item');\n  $('#nav-tabFormCompany .tab-pane').removeClass('show active');\n  $(`.step-wizard-item:nth-child(${step})`).addClass('current-item');\n  $(`#nav-tabFormCompany .tab-pane:nth-child(${step})`).addClass('show active');\n}\nfunction validateForm() {\n  const form = $('#nav-tabFormCompany .tab-pane.active form');\n  let isValidForm = true;\n  let isValid = true;\n  form.find('.is-invalid').removeClass('is-invalid');\n  form.find('.invalid-feedback').remove();\n  form.each(function () {\n    isValid = $(this).get(0).checkValidity();\n    if (!isValid) {\n      const formId = $(this).attr('id');\n      isValidForm = false;\n      $(`#${formId} :required`).each(function () {\n        if ($(this).val() == '') {\n          (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.addInvalidFeedback)(this);\n        }\n      });\n      if (/^form-partner/.test(formId)) {\n        $(this).find('.accordion').each(function () {\n          if ($(this).find('.is-invalid')) {\n            $(this).find('.accordion-button').click();\n            return;\n          }\n          $(this).find('.accordion').collapse('hide');\n        });\n      }\n    }\n  });\n  return isValidForm;\n}\n\n//# sourceURL=webpack://access-control/./resources/js/company/step-wizard.js?");

/***/ }),

/***/ "./resources/js/helpers.js":
/*!*********************************!*\
  !*** ./resources/js/helpers.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addInvalidFeedback: () => (/* binding */ addInvalidFeedback),\n/* harmony export */   cepFormat: () => (/* binding */ cepFormat),\n/* harmony export */   clearCurrencyValue: () => (/* binding */ clearCurrencyValue),\n/* harmony export */   cpfFormat: () => (/* binding */ cpfFormat),\n/* harmony export */   currencyFormat: () => (/* binding */ currencyFormat),\n/* harmony export */   foneFormat: () => (/* binding */ foneFormat),\n/* harmony export */   formatCurrencyValue: () => (/* binding */ formatCurrencyValue),\n/* harmony export */   formatPercentage: () => (/* binding */ formatPercentage),\n/* harmony export */   getAddress: () => (/* binding */ getAddress),\n/* harmony export */   listStates: () => (/* binding */ listStates),\n/* harmony export */   parseCurrencyToFloat: () => (/* binding */ parseCurrencyToFloat),\n/* harmony export */   removeInvalidFeedback: () => (/* binding */ removeInvalidFeedback)\n/* harmony export */ });\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Classe para armazenar funcoes utilitarias\r\n */\n\n\n/**\r\n * Formata o valor do campo monetario\r\n * @param {string} field O seletor do campo\r\n */\nfunction formatCurrencyValue(field) {\n  $(field).on('input', function () {\n    let valor = $(this).val();\n    valor = valor.replace(/\\D/g, '');\n    valor = (Number(valor) / 100).toFixed(2);\n    $(this).val(new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(valor));\n  });\n}\n/**\r\n * Sanitiza o valor dos campos com a classe \"currency\"\r\n * @param {string} field\r\n * @returns\r\n */\nfunction clearCurrencyValue(value) {\n  return value.replace(/[^\\d,]/g, '').replace('.', '').replace(',', '.');\n}\n/**\r\n * Formata o valor para o padrao monetario brasileiro\r\n * @param {String} value\r\n * @returns\r\n */\nfunction currencyFormat(value) {\n  return new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(value);\n}\n/**\r\n * Formata o cep\r\n * @param {*} field \r\n */\nfunction cepFormat(field) {\n  // Remove tudo que não for número\n  let value = $(field).val().replace(/\\D/g, '');\n\n  // Limita a 8 dígitos\n  if (value.length > 8) {\n    value = value.substring(0, 8);\n  }\n\n  // Aplica o formato 00000-000\n  if (value.length > 5) {\n    value = value.substring(0, 5) + '-' + value.substring(5);\n  }\n  $(field).val(value);\n}\n/**\r\n * Busca o endereço pelo cep\r\n */\nfunction getAddress(field) {\n  if ($(field).val().length == 9) {\n    const seletor = $(field).data('address');\n    fetch('https://viacep.com.br/ws/' + $(field).val() + '/json/', {\n      method: 'GET',\n      dataType: 'json'\n    }).then(async response => {\n      if (!response.ok) {\n        return;\n      }\n      const data = await response.json();\n      $(`[data-address=\"${seletor}\"]`).each(function () {\n        if ($(this).prop('name').includes('estado')) {\n          $(this).children('option').each(function () {\n            if ($(this).text() === data.estado) {\n              $(this).prop('selected', true);\n            }\n          });\n          return;\n        }\n        Object.keys(data).forEach(d => {\n          if ($(this).prop('name').includes(d)) {\n            $(this).val(data[d]);\n          }\n        });\n      });\n    });\n  }\n}\nfunction formatPercentage(field) {\n  $(document).on('input', field, function () {\n    let val = $(this).val();\n    val = sanitizeInput(val);\n    if (val.length > 5) {\n      val = val.substring(0, 5);\n    }\n    if (val > 100) {\n      val = val / 10;\n    }\n    $(this).val(val + (val !== '' ? '%' : ''));\n  });\n  $(document).on('focus', field, function () {\n    let val = $(this).val();\n    $(this).val(val.replace('%', ''));\n  });\n  $(document).on('blur', field, function () {\n    let val = sanitizeInput($(this).val());\n    val = clampToPercentage(val);\n    if (val !== '') {\n      $(this).val(val + '%');\n    } else {\n      $(this).val('');\n    }\n  });\n}\nfunction sanitizeInput(val) {\n  // Permitir só números e um único ponto\n  val = val.replace(/[^0-9.]/g, '');\n  let partes = val.split('.');\n  if (partes.length > 2) {\n    val = partes[0] + '.' + partes[1];\n  }\n  return val;\n}\nfunction clampToPercentage(val) {\n  let num = parseFloat(val);\n  if (isNaN(num)) return '';\n  if (num < 0) num = 0;\n  if (num > 100) num = 100;\n  return num.toString();\n}\nfunction addInvalidFeedback(field, message = 'Campo obrigatório!') {\n  $(field).addClass('is-invalid');\n  $(field).after('<div class=\"invalid-feedback\">' + message + '</div>');\n}\n/**\r\n * Remove a classe is-invalid e o feedback de erro\r\n * @param {*} form O seletor do formulário, se não for passado, remove de todos. Deve ser acrescentado de # (ex: #form-company)\r\n */\nfunction removeInvalidFeedback(form = '') {\n  $(`${form} .is-invalid`).removeClass('is-invalid');\n  $(`${form} .invalid-feedback`).remove();\n}\n// aplica a máscara no CPF\nfunction cpfFormat(field) {\n  var value = $(field).val().replace(/\\D/g, ''); // remove tudo que não for número\n\n  if (value.length > 11) value = value.substring(0, 11); // limita a 11 dígitos\n\n  // aplica a máscara\n  if (value.length > 9) {\n    value = value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{1,2})/, \"$1.$2.$3-$4\");\n  } else if (value.length > 6) {\n    value = value.replace(/(\\d{3})(\\d{3})(\\d{1,3})/, \"$1.$2.$3\");\n  } else if (value.length > 3) {\n    value = value.replace(/(\\d{3})(\\d{1,3})/, \"$1.$2\");\n  }\n  $(field).val(value);\n}\n// aplica a máscara no telefone\nfunction foneFormat(field) {\n  var value = $(field).val().replace(/\\D/g, ''); // remove tudo que não for número\n\n  if (value.length > 11) value = value.substring(0, 11); // limita a 11 dígitos\n\n  if (value.length >= 10) {\n    // celular com 9 dígitos\n    value = value.replace(/^(\\d{2})(\\d{5})(\\d{4})$/, '($1) $2-$3');\n  } else if (value.length >= 6) {\n    // fixo com 8 dígitos\n    value = value.replace(/^(\\d{2})(\\d{4})(\\d{0,4})$/, '($1) $2-$3');\n  } else if (value.length >= 3) {\n    value = value.replace(/^(\\d{2})(\\d{0,5})$/, '($1) $2');\n  } else if (value.length > 0) {\n    value = value.replace(/^(\\d{0,2})$/, '($1');\n  }\n  $(field).val(value);\n}\n/**\r\n * Converte o valor de uma string no formato de moeda para float\r\n * @param {string} valor \r\n * @returns \r\n */\nfunction parseCurrencyToFloat(valor) {\n  if (typeof valor !== 'string') return 0;\n  return parseFloat(valor.replace(/\\s/g, '') // remove espaços\n  .replace('R$', '') // remove símbolo R$\n  .replace(/\\./g, '') // remove pontos\n  .replace(',', '.') // troca vírgula por ponto\n  );\n}\n// Lista de estados brasileiros\nlet statesList = [];\nasync function listStates(nameField) {\n  $(nameField).empty().addClass('skeleton');\n  if (statesList.length == 0) {\n    const request = await fetch('/api/v1/auxiliares/listar-estados');\n    statesList = await request.json();\n  }\n  $(nameField).html('<option value=\"\">Selecione um estado</option>').removeClass('skeleton');\n  Object.keys(statesList).forEach(state => {\n    $(nameField).append($('<option />', {\n      value: statesList[state].sigla,\n      text: statesList[state].descricao\n    }));\n  });\n}\n\n//# sourceURL=webpack://access-control/./resources/js/helpers.js?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/company/company.js");
/******/ 	
/******/ })()
;