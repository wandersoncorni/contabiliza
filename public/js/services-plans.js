/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/services-plans.js":
/*!****************************************!*\
  !*** ./resources/js/services-plans.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getButtons: () => (/* binding */ getButtons),\n/* harmony export */   loadPlansList: () => (/* binding */ loadPlansList),\n/* harmony export */   plansData: () => (/* binding */ plansData)\n/* harmony export */ });\n/* harmony import */ var _services_plans_service_plan_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services-plans/service-plan.js */ \"./resources/js/services-plans/service-plan.js\");\n/* harmony import */ var _services_plans_plan_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services-plans/plan.js */ \"./resources/js/services-plans/plan.js\");\n/* harmony import */ var _services_plans_service_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services-plans/service.js */ \"./resources/js/services-plans/service.js\");\n/* harmony import */ var _services_plans_category_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services-plans/category.js */ \"./resources/js/services-plans/category.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Script principal para pagina de servicos\r\n * @dependencies services-plans/services-plan.js, \r\n *               services-plans/plan.js, \r\n *               services-plans/services.js, \r\n *               services-plans/categories.js\r\n * @Author Wanderson Corni <wandersoncorni@gmail.com>\r\n * \r\n */\n\n\n\n\n\nconst serviceListSelected = [];\nlet plansData = [];\n$(document).ready(function () {\n  // Inicializa o DataTable\n  loadPlansList();\n  // Eventos para o DataTable de planos\n  setTablesActions();\n  // Iniclializa o modal de criacao e edicao de plano\n  _services_plans_service_plan_js__WEBPACK_IMPORTED_MODULE_0__.init();\n  $('#modal-form-plan #nav-tab a').on('click', function () {\n    if ($(this).attr('href') === '#nav-plan') {\n      _services_plans_plan_js__WEBPACK_IMPORTED_MODULE_1__.init();\n    } else if ($(this).attr('href') === '#nav-category') {\n      _services_plans_category_js__WEBPACK_IMPORTED_MODULE_3__.init();\n    } else if ($(this).attr('href') === '#nav-service') {\n      _services_plans_service_js__WEBPACK_IMPORTED_MODULE_2__.init();\n    }\n  });\n});\n/**\r\n * Carrega a lista de planos\r\n */\nfunction loadPlansList() {\n  if ($.fn.dataTable.isDataTable('#tb-plans')) {\n    $('#tb-plans').DataTable().destroy();\n  }\n  $('#tb-plans').DataTable({\n    ajax: function (data, callback) {\n      fetch('/api/v1/planos-servicos', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(async response => {\n        const resp = {\n          data: []\n        };\n        if (response.ok) {\n          const data = await response.json();\n          const list = [];\n          plansData = data;\n          data.forEach(plan => {\n            const pid = list.length;\n            if (!list.find(plano => plano.id == plan.id)) {\n              list.push({\n                id: plan.id,\n                nome: plan.nome,\n                categorias: [],\n                servicos: []\n              });\n            }\n            plan.categorias_servicos.forEach(cs => {\n              if (!list[pid].categorias.find(cat => cat.id == cs.categoria.id)) {\n                list[pid].categorias.push({\n                  id: cs.categoria.id,\n                  nome: cs.categoria.nome\n                });\n              }\n              if (!list[pid].servicos.find(serv => serv.id == cs.servico.id)) {\n                list[pid].servicos.push({\n                  id: cs.servico.id,\n                  nome: cs.servico.nome,\n                  categoria_id: cs.categoria.id\n                });\n              }\n            });\n          });\n          resp.data = list;\n        }\n        callback(resp);\n      });\n    },\n    columns: [{\n      \"data\": \"nome\"\n    }, {\n      \"data\": data => {\n        const list = $('<ul />', {\n          class: 'list-group'\n        });\n        data.categorias.forEach(cat => {\n          list.append($('<li />', {\n            class: 'list-group-item'\n          }).html(cat.nome).append([$('<button />', {\n            type: 'button',\n            class: 'btn btn-xs btn-transparent text-info ms-2',\n            'data-plano_id': data.id,\n            'data-categoria_id': cat.id\n          }).html($('<i />', {\n            class: 'heroicon heroicon-pencil-square'\n          })), $('<button />', {\n            type: 'button',\n            class: 'btn btn-xs btn-transparent text-danger ms-2',\n            'data-plano_id': data.id,\n            'data-categoria_id': cat.id,\n            'data-action': 'delete_category'\n          }).html($('<i />', {\n            class: 'heroicon heroicon-trash'\n          }))]));\n        });\n        return list.prop('outerHTML');\n      }\n    }, {\n      \"data\": data => {\n        const list = $('<ul />', {\n          class: 'list-group'\n        });\n        data.servicos.forEach(srv => {\n          list.append($('<li />', {\n            class: 'list-group-item'\n          }).html(srv.nome).append([$('<button />', {\n            type: 'button',\n            class: 'btn btn-xs btn-transparent text-info ms-2',\n            'data-plano_id': data.id,\n            'data-categoria_id': srv.categoria_id,\n            'data-servico_id': srv.id\n          }).html($('<i />', {\n            class: 'heroicon heroicon-pencil-square'\n          })), $('<button />', {\n            type: 'button',\n            class: 'btn btn-xs btn-transparent text-danger ms-2',\n            'data-plano_id': data.id,\n            'data-categoria_id': srv.categoria_id,\n            'data-servico_id': srv.id,\n            'data-action': 'delete_service'\n          }).html($('<i />', {\n            class: 'heroicon heroicon-trash'\n          }))]));\n        });\n        return list.prop('outerHTML');\n      }\n    }, {\n      \"data\": data => {\n        return $('<button />', {\n          type: 'button',\n          class: 'btn btn-xs btn-transparent text-danger',\n          'data-plano_id': data.id,\n          'data-action': 'delete_plan'\n        }).html($('<i />', {\n          class: 'heroicon heroicon-trash'\n        })).prop('outerHTML');\n      }\n    }],\n    columnDefs: [{\n      \"orderable\": false,\n      \"targets\": [3]\n    } // Desabilita ordenação na coluna de ações\n    ],\n    order: [[0, \"asc\"]]\n  });\n}\n/**\r\n * Define os eventos para os botoes da lista de planos da pagina incial\r\n */\nfunction setTablesActions() {\n  $('#app-content #tb-plans').on('click', 'button', function (e) {\n    e.preventDefault();\n    let target = 'plano';\n    let url = 'api/v1/plano-servico/' + $(this).data('plano_id');\n    if ($(this).data('action') == 'delete_category') {\n      target = 'categoria';\n      url = 'api/v1/categoria-plano/' + $(this).data('plano_id') + '/' + $(this).data('categoria_id');\n    } else if ($(this).data('action') == 'delete_service') {\n      target = 'serviço';\n      url = 'api/v1/servico-plano/' + $(this).data('plano_id') + '/' + $(this).data('categoria_id') + '/' + $(this).data('servico_id');\n    }\n    if (['delete_plan', 'delete_category', 'delete_service'].includes($(this).data('action'))) {\n      Swal.fire({\n        title: `Exclusão de ${target}`,\n        text: \"Voce não poderá reverter isso!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Sim, excluir!'\n      }).then(result => {\n        if (result.isConfirmed) {\n          fetch(url, {\n            method: 'DELETE',\n            headers: {\n              'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n              'X-Requested-With': 'XMLHttpRequest',\n              'Accept': 'application/json'\n            },\n            credentials: 'include'\n          }).then(async response => {\n            const data = await response.json();\n            if (response.ok) {\n              const plansTable = $('#tb-plans').DataTable();\n              plansTable.ajax.reload();\n            } else {\n              Swal.fire(`Erro ao excluir ${target}:`, data.message, 'error');\n            }\n          }).catch(error => console.error(`Erro ao excluir ${target}:`, error));\n        }\n      });\n      return;\n    }\n    const plano = plansData.find(plan => plan.id == $(this).data('plano_id'));\n    _services_plans_service_plan_js__WEBPACK_IMPORTED_MODULE_0__.loadPlanForm(plano, $(this).data('categoria_id'));\n  });\n}\n/**\r\n * Retorna os botoes de acoes da tabela\r\n * @param {Int} id \r\n * @param {String} url \r\n * @returns \r\n */\nfunction getButtons(id, url) {\n  return $('<div />').append([$('<button />', {\n    class: 'btn btn-xs d-plex me-2 btn-transparent text-info',\n    'data-id': id,\n    'data-action': 'edit'\n  }).append($('<i />', {\n    class: 'heroicon heroicon-pencil-square'\n  })), $('<button />', {\n    class: 'btn btn-xs d-plex btn-transparent text-danger',\n    'data-id': id,\n    'data-action': 'delete'\n  }).append($('<i />', {\n    class: 'heroicon heroicon-trash'\n  }))]).prop('innerHTML');\n}\n\n//# sourceURL=webpack://access-control/./resources/js/services-plans.js?");

/***/ }),

/***/ "./resources/js/services-plans/category.js":
/*!*************************************************!*\
  !*** ./resources/js/services-plans/category.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _services_plans_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services-plans.js */ \"./resources/js/services-plans.js\");\n/* harmony import */ var _service_plan_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./service-plan.js */ \"./resources/js/services-plans/service-plan.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Scripts para aba de categorias do modal de criacao e edicao de plano\r\n */\n\n\n\nlet categoriesData = [];\n\nfunction init() {\n  $('#form-category')[0].reset();\n  $('#tb-categories').on('click', 'button', function () {\n    if ($(this).data('action') == 'edit') {\n      const category = categoriesData.find(cat => cat.id == $(this).data('id'));\n      $('#form-category input[name=\"id\"]').val(category.id);\n      $('#form-category input[name=\"nome\"]').val(category.nome);\n    } else if ($(this).data('action') == 'delete') {\n      const category = categoriesData.find(cat => cat.id == $(this).data('id'));\n      Swal.fire({\n        title: `Exclusão de categoria ${category.nome}`,\n        text: \"Voce não poderá reverter essa ação!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Sim, excluir!'\n      }).then(result => {\n        if (result.isConfirmed) {\n          deleteCategory(category.id);\n        }\n      });\n    }\n  });\n  loadCategoriesList();\n  $('#form-category').submit(function (e) {\n    e.preventDefault();\n    if ($('#form-category input[name=\"id\"]').val() > 0) {\n      editCategory();\n      return;\n    }\n    createCategory();\n  });\n}\n/**\r\n * Carrega a lista de categorias\r\n */\nfunction loadCategoriesList() {\n  if ($.fn.dataTable.isDataTable('#tb-categories')) {\n    $('#tb-categories').DataTable().destroy();\n  }\n  $('#tb-categories').DataTable({\n    ajax: (data, callback) => fetch('/api/v1/categorias-servicos').then(async response => {\n      if (!response.ok) {\n        callback({\n          data: []\n        });\n        return;\n      }\n      categoriesData = await response.json();\n      let list = '';\n      categoriesData.forEach(categoria => {\n        list += `<tr>\n                            <td>${categoria.nome}</td>\n                            <td>${(0,_services_plans_js__WEBPACK_IMPORTED_MODULE_0__.getButtons)(categoria.id, '/category')}</td>\n                        </tr>`;\n      });\n      $('#tb-categories tbody').html(list);\n    }),\n    columnDefs: [{\n      \"orderable\": false,\n      \"targets\": [1]\n    } // Desabilita ordenação na coluna de ações\n    ],\n    order: [[0, \"asc\"]]\n  });\n}\n/**\r\n * Salva uma nova categoria\r\n */\nfunction createCategory() {\n  const formData = new FormData(document.getElementById('form-category'));\n  sendRequest({\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'X-Requested-With': 'XMLHttpRequest',\n      'Accept': 'application/json'\n    },\n    credentials: 'include',\n    body: formData\n  });\n}\n/**\r\n * Edita uma categoria\r\n */\nfunction editCategory() {\n  const formData = new FormData(document.getElementById('form-category'));\n  if (formData.get('nome') == categoriesData.find(cat => cat.id == formData.get('id')).nome) {\n    $('#form-category')[0].reset();\n    return;\n  }\n  formData.append('_method', 'PUT');\n  sendRequest({\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'X-Requested-With': 'XMLHttpRequest',\n      'Accept': 'application/json'\n    },\n    credentials: 'include',\n    body: formData\n  });\n}\n/**\r\n * \r\n */\nfunction deleteCategory(id) {\n  sendRequest({\n    method: 'DELETE',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'X-Requested-With': 'XMLHttpRequest',\n      'Accept': 'application/json'\n    },\n    credentials: 'include'\n  }, `/api/v1/categoria-servico/${id}`);\n}\nfunction sendRequest(options, url = '/api/v1/categoria-servico') {\n  fetch(url, options).then(async response => {\n    if (!response.ok) {\n      return;\n    }\n    const data = await response.json();\n    loadCategoriesList();\n    (0,_service_plan_js__WEBPACK_IMPORTED_MODULE_1__.setCategoriesOptions)();\n    $('#form-category')[0].reset();\n  });\n}\n\n//# sourceURL=webpack://access-control/./resources/js/services-plans/category.js?");

/***/ }),

/***/ "./resources/js/services-plans/plan.js":
/*!*********************************************!*\
  !*** ./resources/js/services-plans/plan.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _services_plans_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services-plans.js */ \"./resources/js/services-plans.js\");\n/* harmony import */ var _service_plan_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./service-plan.js */ \"./resources/js/services-plans/service-plan.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Scripts para a aba de planos de servicos\r\n * @author Wanderson Corni <wandersoncorni@gmail.com>\r\n */\n\n\n\n\nlet plansData = [];\nfunction init() {\n  loadPlanosServicosTable();\n  formatCurrencyValue();\n  // Carrega dados de um plano de servicos para edicao\n  $('#app-content').on('click', '#tb-services-plans button', function () {\n    if ($(this).data('action') == 'edit') {\n      carregarFormPlanoServico(plansData.find(plano => plano.id == $(this).data('id')));\n    } else if ($(this).data('action') == 'delete') {\n      excluirPlanoServico(plansData.find(plano => plano.id == $(this).data('id')));\n    }\n  });\n  $('#form-service-plan').on('submit', function (e) {\n    e.preventDefault();\n    const id = $('#form-service-plan input[name=\"id\"]').val();\n    if (id == 0) {\n      salvarPlanoServico();\n      return;\n    }\n    editarPlanoServico(plansData.find(plano => plano.id == id));\n  });\n}\n// Carrega a tabela de planos de servicos\nfunction loadPlanosServicosTable() {\n  if ($.fn.dataTable.isDataTable('#tb-services-plans')) {\n    $('#tb-services-plans').DataTable().destroy();\n  }\n  $('#tb-services-plans').DataTable({\n    ajax: (data, callback) => fetch('/api/v1/planos-servicos').then(async response => {\n      if (!response.ok) {\n        callback({\n          data: []\n        });\n        return;\n      }\n      plansData = await response.json();\n      let planos = '';\n      plansData.forEach(plano => {\n        planos += `<tr>\n                        <td>${plano.nome}</td>\n                        <td>${plano.descricao}</td>\n                        <td>${curencyFormat(plano.valor_mensal)}</td>\n                        <td>${curencyFormat(plano.valor_anual)}</td>\n                        <td>${plano.ativo ? '<span class=\"text-success\">Ativo</span>' : '<span class=\"text-danger\">Inativo</span>'}</td>\n                        <td>${(0,_services_plans_js__WEBPACK_IMPORTED_MODULE_0__.getButtons)(plano.id, '/plano-servico')}</td>\n                    </tr>`;\n      });\n      $('#tb-services-plans tbody').html(planos);\n    }),\n    columnDefs: [{\n      \"orderable\": false,\n      \"targets\": [2, 3, 4]\n    } // Desabilita ordenação na coluna de ações\n    ],\n    order: [[0, \"asc\"]]\n  });\n}\n/**\r\n * Formata o valor para o padrao monetario brasileiro\r\n * @param {String} value\r\n * @returns\r\n */\nfunction curencyFormat(value) {\n  return new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(value);\n}\n/**\r\n * Carrega o form com os dados do plano\r\n * @param {object} data\r\n */\nfunction carregarFormPlanoServico(data) {\n  Object.keys(data).forEach(campo => {\n    if (['valor_mensal', 'valor_anual'].includes(campo)) {\n      $(`[name=\"${campo}\"]`).val(data[campo]).trigger('input');\n      return;\n    }\n    $(`[name=\"${campo}\"]`).val(data[campo]);\n  });\n}\n/**\r\n * Formata o valor do campo currency\r\n */\nfunction formatCurrencyValue() {\n  $('.currency').on('input', function () {\n    let valor = $(this).val();\n    valor = valor.replace(/\\D/g, '');\n    valor = (Number(valor) / 100).toFixed(2);\n    $(this).val(new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(valor));\n  });\n}\n/**\r\n * Sanitiza o valor dos campos com a classe \"currency\"\r\n * @param {string} field\r\n * @returns\r\n */\nfunction clearCurrencyValue(value) {\n  return value.replace(/[^\\d,]/g, '').replace('.', '').replace(',', '.');\n}\n/**\r\n * Salva o plano de servico\r\n */\nfunction salvarPlanoServico() {\n  const formData = new FormData(document.querySelector('#form-service-plan'));\n  formData.set('valor_mensal', clearCurrencyValue(formData.get('valor_mensal')));\n  formData.set('valor_anual', clearCurrencyValue(formData.get('valor_anual')));\n  sendRequest({\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'X-Requested-With': 'XMLHttpRequest',\n      'Accept': 'application/json'\n    },\n    credentials: 'include',\n    body: formData\n  });\n}\n/**\r\n * Edita um plano de servico\r\n * @param {object} data\r\n */\nfunction editarPlanoServico() {\n  const formData = new FormData(document.querySelector('#form-service-plan'));\n  formData.set('valor_mensal', clearCurrencyValue(formData.get('valor_mensal')));\n  formData.set('valor_anual', clearCurrencyValue(formData.get('valor_anual')));\n  formData.append('_method', 'PUT');\n  sendRequest({\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'Accept': 'application/json'\n    },\n    body: formData\n  }, `/api/v1/plano-servico`);\n}\n/**\r\n * Edita um plano de servico\r\n * @param {object} data\r\n */\nfunction excluirPlanoServico(data) {\n  Swal.fire({\n    title: 'Exclusão de plano de servico',\n    text: \"Voce não poderá reverter esta ação!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Sim, excluir!'\n  }).then(result => {\n    if (result.isConfirmed) {\n      sendRequest({\n        method: 'DELETE',\n        headers: {\n          'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n          'Accept': 'application/json'\n        },\n        credentials: 'include'\n      }, `/api/v1/plano-servico/${data.id}`);\n    }\n  });\n}\n/**\r\n * Envia uma requisicao conforme os parametros\r\n * @param {Object} params\r\n */\nfunction sendRequest(params, url = '/api/v1/plano-servico') {\n  fetch(url, params).then(async response => {\n    const data = await response.json();\n    if (response.ok) {\n      (0,_services_plans_js__WEBPACK_IMPORTED_MODULE_0__.loadPlansList)();\n      loadPlanosServicosTable();\n      (0,_service_plan_js__WEBPACK_IMPORTED_MODULE_1__.loadOptionsPlansList)();\n      $('#form-service-plan')[0].reset();\n    } else {\n      Swal.fire(`Erro ao enviar a requisição:`, data.message, 'error');\n    }\n  }).catch(error => console.error(`Erro ao enviar a requisição:`, error));\n}\n\n//# sourceURL=webpack://access-control/./resources/js/services-plans/plan.js?");

/***/ }),

/***/ "./resources/js/services-plans/service-plan.js":
/*!*****************************************************!*\
  !*** ./resources/js/services-plans/service-plan.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   loadOptionsPlansList: () => (/* binding */ loadOptionsPlansList),\n/* harmony export */   loadPlanForm: () => (/* binding */ loadPlanForm),\n/* harmony export */   setCategoriesOptions: () => (/* binding */ setCategoriesOptions),\n/* harmony export */   setServicesOptions: () => (/* binding */ setServicesOptions)\n/* harmony export */ });\n/* harmony import */ var _services_plans_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services-plans.js */ \"./resources/js/services-plans.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Scripts para a aba de planos de servicos do modal de criacao e edicao.\r\n * @author Wanderson Corni <wandersoncorni@gmail.com>\r\n */\n\n\n\nconst serviceListSelected = [];\nfunction init() {\n  $('#app-content #modal-form-plan').on('show.bs.modal', function (e) {\n    // Carrega a lista do seletor de categorias\n    if ($('#lista-categorias option').length <= 1) {\n      setCategoriesOptions();\n    }\n    // Carrega a lista do seletor de servicos\n    setServicesOptions();\n    if ($('#lista-planos option').length <= 1) {\n      loadOptionsPlansList();\n    }\n    $('#form-config-plan')[0].reset();\n    // Reinicia a lista de servicos\n    optionReset();\n  });\n  // Eventos para o select de categorias\n  setSelectCategoriesEvent();\n  $('#app-content #form-config-plan').on('submit', function (e) {\n    e.preventDefault();\n    // Salva o plano\n    savePlan();\n  });\n}\n/**\r\n * Carrega a lista do select para categorias\r\n */\nfunction setCategoriesOptions() {\n  fetch('/api/v1/categorias-servicos').then(response => response.json()).then(data => {\n    let categorias = '<option value=\"\">Escolha uma categoria</option>';\n    data.forEach(categoria => {\n      categorias += `<option value=\"${categoria.id}\">${categoria.nome}</option>`;\n    });\n    $('#lista-categorias').html(categorias);\n  });\n}\n/**\r\n * Carrega a lista do select para servicos\r\n */\nfunction setServicesOptions() {\n  if (!$('#lista-servicos option').length) {\n    fetch('/api/v1/servicos').then(response => response.json()).then(data => {\n      let servicos = '';\n      data.forEach(servico => {\n        servicos += `<option class=\"bg-white\" value=\"${servico.id}\">${servico.nome}</option>`;\n      });\n      $('#lista-servicos').html(servicos).prop('size', $('#lista-servicos option').length);\n    });\n  }\n}\n/**\r\n * Eventos para o select de categorias\r\n */\nfunction setSelectCategoriesEvent() {\n  $('#lista-servicos').click(function (e) {\n    e.target.innerHTML = e.target.innerHTML.replace('✔', '');\n    if (serviceListSelected.includes(e.target.value)) {\n      serviceListSelected.splice(serviceListSelected.indexOf(e.target.value), 1);\n      e.target.classList.remove('bg-black');\n      e.target.classList.remove('text-white');\n    } else {\n      serviceListSelected.push(e.target.value);\n      e.target.innerHTML = `&#x2714; ${e.target.innerHTML}`;\n      e.target.classList.add('bg-black');\n      e.target.classList.add('text-white');\n    }\n    $('#lista-servicos').val(serviceListSelected);\n  });\n}\n/**\r\n * Carrega os dados do plano selecionado na lista paro o formulario de edicao\r\n * @param {string} plano \r\n * @param {int} categoria_id \r\n */\nfunction loadPlanForm(plano, categoria_id) {\n  let leep = 0;\n  $('#modal-form-plan').modal('show');\n  const loader = setInterval(() => {\n    if ($('#modal-form-plan [name=\"plano_servico_id\"]').length > 0) {\n      clearInterval(loader);\n      $('#modal-form-plan [name=\"plano_servico_id\"]').val(plano.id);\n      $('#modal-form-plan [name=\"categoria_servico_id\"]').val(categoria_id);\n      const servicos = [];\n      plano.categorias_servicos.forEach(cs => {\n        if (cs.categoria.id != categoria_id) return;\n        servicos.push(cs.servico.id);\n      });\n      $('#modal-form-plan [name=\"servico_id\"]').val(servicos);\n      setOptionSelected();\n    }\n  }, 500);\n}\n/** Reinicia a lista de servicos \r\n * @returns {void}\r\n */\nfunction optionReset() {\n  $('#form-config-plan [name=\"servico_id\"] option').each(function () {\n    $(this).prop('selected', false);\n    $(this).text($(this).text().replace('✔', ''));\n    $(this).removeClass('bg-black');\n    $(this).removeClass('text-white');\n  });\n}\n/**\r\n * Carrega os planos de servicos\r\n */\nfunction loadOptionsPlansList() {\n  fetch('/api/v1/planos-servicos').then(response => response.json()).then(data => {\n    let planos = '<option value=\"\">Escolha um plano</option>';\n    data.forEach(plano => {\n      planos += `<option value=\"${plano.id}\">${plano.nome}</option>`;\n    });\n    $('#lista-planos').html(planos);\n  });\n}\nfunction setOptionSelected() {\n  $('#form-config-plan [name=\"servico_id\"] option:selected').each(function () {\n    $(this).html('&#x2714;' + $(this).text());\n    $(this).addClass('bg-black');\n    $(this).addClass('text-white');\n  });\n}\nfunction savePlan() {\n  const config = [];\n  $('#lista-servicos option:selected').each(function () {\n    config.push({\n      plano_servico_id: $('#form-config-plan [name=\"plano_servico_id\"]').val(),\n      categoria_servico_id: $('#form-config-plan [name=\"categoria_servico_id\"]').val(),\n      servico_id: $(this).val()\n    });\n  });\n  fetch('/api/v1/plano', {\n    method: 'POST',\n    body: JSON.stringify(config),\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }).then(async response => {\n    const data = await response.json();\n    if (response.ok) {\n      $('#form-config-plan')[0].reset();\n      (0,_services_plans_js__WEBPACK_IMPORTED_MODULE_0__.loadPlansList)();\n      Swal.fire({\n        icon: 'success',\n        title: 'Sucesso',\n        text: data.message\n      });\n    }\n  }).catch(error => {\n    console.error('Erro ao carregar os dados:', error);\n  });\n}\n\n//# sourceURL=webpack://access-control/./resources/js/services-plans/service-plan.js?");

/***/ }),

/***/ "./resources/js/services-plans/service.js":
/*!************************************************!*\
  !*** ./resources/js/services-plans/service.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _services_plans_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../services-plans.js */ \"./resources/js/services-plans.js\");\n/* harmony import */ var _service_plan_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./service-plan.js */ \"./resources/js/services-plans/service-plan.js\");\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/**\r\n * Scripts para aba de categorias do modal de criacao e edicao de plano\r\n */\n\n\n\n\nlet servicesData = [];\nfunction init() {\n  $('#form-service')[0].reset();\n  loadServicesList();\n  $('#form-service').on('submit', function (e) {\n    e.preventDefault();\n    const id = $('#form-service input[name=\"id\"]').val();\n    if (id == 0) {\n      createService();\n      return;\n    }\n    editService(servicesData.find(servico => servico.id == id));\n  });\n  $('#tb-services').on('click', 'button', function () {\n    if ($(this).data('action') == 'edit') {\n      const service = servicesData.find(cat => cat.id == $(this).data('id'));\n      $('#form-service input[name=\"id\"]').val(service.id);\n      $('#form-service input[name=\"nome\"]').val(service.nome);\n    } else if ($(this).data('action') == 'delete') {\n      const service = servicesData.find(cat => cat.id == $(this).data('id'));\n      Swal.fire({\n        title: `Exclusão de categoria ${service.nome}`,\n        text: \"Voce não poderá reverter essa ação!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Sim, excluir!'\n      }).then(result => {\n        if (result.isConfirmed) {\n          deleteService(service.id);\n        }\n      });\n    }\n  });\n}\n/**\r\n * Carrega a lista de categorias\r\n */\nfunction loadServicesList() {\n  if ($.fn.dataTable.isDataTable('#tb-services')) {\n    $('#tb-services').DataTable().destroy();\n  }\n  $('#tb-services').DataTable({\n    ajax: (data, callback) => fetch('/api/v1/servicos').then(async response => {\n      if (!response.ok) {\n        callback({\n          data: []\n        });\n        return;\n      }\n      servicesData = await response.json();\n      let list = '';\n      servicesData.forEach(ServiceWorker => {\n        list += `<tr>\n                                <td>${ServiceWorker.nome}</td>\n                                <td>${(0,_services_plans_js__WEBPACK_IMPORTED_MODULE_0__.getButtons)(ServiceWorker.id, '/servico')}</td>\n                            </tr>`;\n      });\n      $('#tb-services tbody').html(list);\n    }),\n    columnDefs: [{\n      \"orderable\": false,\n      \"targets\": [1]\n    } // Desabilita ordenação na coluna de ações\n    ],\n    order: [[0, \"asc\"]]\n  });\n}\n/**\r\n * Cria um servico\r\n */\nfunction createService() {\n  sendRequest({\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'Accept': 'application/json'\n    },\n    body: new FormData(document.querySelector('#form-service'))\n  });\n}\n/**\r\n * Edita um servico\r\n */\nfunction editService() {\n  const formData = new FormData(document.querySelector('#form-service'));\n  formData.append('_method', 'PUT');\n  sendRequest({\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'X-Requested-With': 'XMLHttpRequest',\n      'Accept': 'application/json'\n    },\n    body: formData\n  });\n}\n/**\r\n * Exclui um servico\r\n */\nfunction deleteService(id) {\n  sendRequest({\n    method: 'DELETE',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n      'Accept': 'application/json'\n    }\n  }, `/api/v1/servico/${id}`);\n}\nfunction sendRequest(options, url = '/api/v1/servico') {\n  fetch(url, options).then(async response => {\n    if (!response.ok) {\n      return;\n    }\n    const data = await response.json();\n    loadServicesList();\n    (0,_service_plan_js__WEBPACK_IMPORTED_MODULE_1__.setServicesOptions)();\n    $('#form-service')[0].reset();\n  });\n}\n\n//# sourceURL=webpack://access-control/./resources/js/services-plans/service.js?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/services-plans.js");
/******/ 	
/******/ })()
;