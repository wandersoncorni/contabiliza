/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/register.js":
/*!**********************************!*\
  !*** ./resources/js/register.js ***!
  \**********************************/
/***/ (() => {

eval("/**\r\n * Scripts para o registro de usuários\r\n */\ndocument.querySelector('#show_password').checked = false;\ndocument.querySelector('#concorde_termo').checked = false;\ndocument.querySelector('#password').addEventListener('input', function () {\n  const password = this.value;\n\n  // Elementos das regras\n  const length = document.querySelector('#length');\n  const uppercase = document.querySelector('#uppercase');\n  const lowercase = document.querySelector('#lowercase');\n  const number = document.querySelector('#number');\n  const special = document.querySelector('#special');\n\n  // Expressões regulares\n  const regexUpper = /[A-Z]/;\n  const regexLower = /[a-z]/;\n  const regexNumber = /[0-9]/;\n  const regexSpecial = /[@$!%*?&]/;\n\n  // Validações\n  validateRule(length, password.length >= 8);\n  validateRule(uppercase, regexUpper.test(password));\n  validateRule(lowercase, regexLower.test(password));\n  validateRule(number, regexNumber.test(password));\n  validateRule(special, regexSpecial.test(password));\n});\nfunction validateRule(element, isValid) {\n  if (isValid) {\n    element.classList.remove('invalid');\n    element.classList.add('valid');\n    element.querySelector('i').classList.remove('heroicon-x');\n    element.querySelector('i').classList.add('heroicon-check');\n  } else {\n    element.classList.remove('valid');\n    element.classList.add('invalid');\n    element.querySelector('i').classList.remove('heroicon-check');\n    element.querySelector('i').classList.add('heroicon-x');\n  }\n}\nconst $showPwd = document.querySelector(\"#show_password\");\n$showPwd.addEventListener(\"change\", function () {\n  const passwordField = document.querySelector(\"#password\");\n  const confirmField = document.querySelector(\"#password_confirmation\");\n  if (this.checked) {\n    passwordField.type = \"text\";\n    confirmField.type = \"text\";\n  } else {\n    passwordField.type = \"password\";\n    confirmField.type = \"password\";\n  }\n});\ndocument.querySelector(\"#register-form\").addEventListener(\"submit\", function (e) {\n  e.preventDefault(); // Impede o envio padrão do formulário\n  // Remove mensagens de erro anteriores\n  removeErrorMessages();\n  // Valida os campos\n  const isValid = validateFields();\n  let statusCode = undefined;\n  if (isValid) {\n    const formData = new FormData(document.querySelector(\"#register-form\"));\n    formData.append(document.createElement('input').name = '_token', getCsrfToken());\n    fetch('/api/v1/account', {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    }).then(response => {\n      statusCode = response.status;\n      return response.json();\n    }).then(data => {\n      if (data.errors) {\n        Object.keys(data.errors).forEach(key => {\n          const field = document.querySelector(`[name=${key}]`);\n          addErrorMessage(field, data.errors[key][0]);\n        });\n        return;\n      } else if (data.error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Erro',\n          text: data.error ?? 'Erro desconhecido'\n        });\n        return;\n      } else if (statusCode < 200 && statusCode > 299) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Erro',\n          text: `${data.message}` ?? 0\n        });\n        return;\n      } else if (statusCode >= 200 && statusCode <= 299) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Cadastro realizado com sucesso',\n          text: data.message ?? 'Sucesso!!'\n        });\n        return;\n      }\n      Swal.fire({\n        icon: 'waning',\n        title: 'Atenção',\n        text: 'Um erro desconhecido ocorreu!'\n      });\n    });\n  }\n});\nfunction validateFields() {\n  const password = document.querySelector(\"#password\").value;\n  const confirmPassword = document.querySelector(\"#password_confirmation\").value;\n  let isValid = true;\n  if (document.querySelectorAll(\".list-unstyled .invalid\").length > 0) {\n    addErrorMessage(document.querySelector(\"#password\"), \"A senha não atende aos requisitos.\");\n    isValid = false;\n  }\n  if (password !== confirmPassword) {\n    addErrorMessage(document.querySelector(\"#password_confirmation\"), \"As senhas não coincidem.\");\n    isValid = false;\n  }\n  if (!document.querySelector(\"#concorde_termo\").checked) {\n    addErrorMessage(document.querySelector(\"#concorde_termo\"), \"Você deve concordar com os termos.\");\n    isValid = false;\n  }\n  return isValid;\n}\nfunction addErrorMessage(field, message) {\n  const errorDiv = document.createElement(\"div\");\n  errorDiv.classList.add(\"invalid-feedback\");\n  errorDiv.textContent = message;\n  field.classList.add(\"is-invalid\"); // Adiciona classe de erro ao campo    \n  field.parentNode.insertBefore(errorDiv, field.nextSibling);\n}\nfunction removeErrorMessages() {\n  const errorMessages = document.querySelectorAll(\".invalid-feedback\");\n  errorMessages.forEach(message => {\n    message.remove();\n  });\n  document.querySelectorAll(\".is-invalid\").forEach(field => {\n    field.classList.remove(\"is-invalid\");\n  });\n}\n\n//# sourceURL=webpack://access-control/./resources/js/register.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/register.js"]();
/******/ 	
/******/ })()
;